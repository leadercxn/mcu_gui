<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FT32F0XX.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FT32F0XX.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sun Feb 27 14:23:04 2022
<BR><P>
<H3>Maximum Stack Usage =        792 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Display_Dynamic &rArr; LCD_FillRectanglePercent &rArr; LCD_Fill &rArr; LCD_SetCursor
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[14]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[14]">ADC1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[11]">DMA1_Channel1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[12]">DMA1_Channel2_3_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[13]">DMA1_Channel4_5_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[e]">EXTI0_1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[f]">EXTI2_3_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[10]">EXTI4_15_IRQHandler</a> from ft_exit.o(i.EXTI4_15_IRQHandler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[c]">FLASH_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from ft32f0xx_it.o(i.HardFault_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from ft32f0xx_it.o(i.NMI_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[a]">PVD_VDDIO_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[7]">PendSV_Handler</a> from ft32f0xx_it.o(i.PendSV_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[d]">RCC_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[b]">RTC_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from ft32f0xx_it.o(i.SVC_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[8]">SysTick_Handler</a> from ft32f0xx_it.o(i.SysTick_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[25]">SystemInit</a> from system_ft32f0xx.o(i.SystemInit) referenced from startup_ft32f030x8.o(.text)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1a]">TIM15_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[15]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[16]">TIM1_CC_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[17]">TIM3_IRQHandler</a> from ft_timer.o(i.TIM3_IRQHandler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[18]">TIM6_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[21]">USART1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[22]">USART2_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[23]">USB_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[9]">WWDG_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[26]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ft32f030x8.o(.text)
 <LI><a href="#[24]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[2]">st7789_write_burst_data</a> from st7789.o(i.st7789_write_burst_data) referenced 2 times from tft_lcd_handler.o(.data)
 <LI><a href="#[0]">st7789_write_cmd</a> from st7789.o(i.st7789_write_cmd) referenced 2 times from tft_lcd_handler.o(.data)
 <LI><a href="#[1]">st7789_write_data</a> from st7789.o(i.st7789_write_data) referenced 2 times from tft_lcd_handler.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[26]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[27]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[54]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[55]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[56]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[57]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[58]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PVD_VDDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillTriangle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRectanglePercent
</UL>

<P><STRONG><a name="[28]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>Display_Dynamic</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, tft_lcd_handler.o(i.Display_Dynamic))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = Display_Dynamic &rArr; LCD_FillRectanglePercent &rArr; LCD_Fill &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRectanglePercent
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>Display_UI1</STRONG> (Thumb, 680 bytes, Stack size 16 bytes, tft_lcd_handler.o(i.Display_UI1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Display_UI1 &rArr; LCD_FillTriangle &rArr; LCD_DrawLine &rArr; LCD_DrawUnitLine &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillTriangle
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawTriangle
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectangle
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ft_exit.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_15_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ft32f0xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[36]"></a>EXTI_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ft32f0xx_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[45]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, ft32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_gpio_output
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_gpio_input
</UL>

<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft32f0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>LCD_Clear</STRONG> (Thumb, 94 bytes, Stack size 656 bytes, mid_tftlcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = LCD_Clear &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[32]"></a>LCD_DrawLine</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, mid_tftlcd.o(i.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LCD_DrawLine &rArr; LCD_DrawUnitLine &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUnitLine
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillTriangle
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawTriangle
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectangle
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_UI1
</UL>

<P><STRONG><a name="[3c]"></a>LCD_DrawPoint</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, mid_tftlcd.o(i.LCD_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowBMP
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUnitLine
</UL>

<P><STRONG><a name="[31]"></a>LCD_DrawRectangle</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, mid_tftlcd.o(i.LCD_DrawRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LCD_DrawRectangle &rArr; LCD_DrawLine &rArr; LCD_DrawUnitLine &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_UI1
</UL>

<P><STRONG><a name="[34]"></a>LCD_DrawTriangle</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, mid_tftlcd.o(i.LCD_DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LCD_DrawTriangle &rArr; LCD_DrawLine &rArr; LCD_DrawUnitLine &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_UI1
</UL>

<P><STRONG><a name="[3b]"></a>LCD_DrawUnitLine</STRONG> (Thumb, 184 bytes, Stack size 64 bytes, mid_tftlcd.o(i.LCD_DrawUnitLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawUnitLine &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[3e]"></a>LCD_Fill</STRONG> (Thumb, 116 bytes, Stack size 688 bytes, mid_tftlcd.o(i.LCD_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = LCD_Fill &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRectanglePercent
</UL>

<P><STRONG><a name="[2d]"></a>LCD_FillRectanglePercent</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, mid_tftlcd.o(i.LCD_FillRectanglePercent))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = LCD_FillRectanglePercent &rArr; LCD_Fill &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Dynamic
</UL>

<P><STRONG><a name="[35]"></a>LCD_FillTriangle</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, mid_tftlcd.o(i.LCD_FillTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LCD_FillTriangle &rArr; LCD_DrawLine &rArr; LCD_DrawUnitLine &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_UI1
</UL>

<P><STRONG><a name="[51]"></a>LCD_Param_Setting</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, mid_tftlcd.o(i.LCD_Param_Setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Param_Setting
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[39]"></a>LCD_SetCursor</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, mid_tftlcd.o(i.LCD_SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[33]"></a>LCD_ShowBMP</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, mid_tftlcd.o(i.LCD_ShowBMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_ShowBMP &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_UI1
</UL>

<P><STRONG><a name="[3f]"></a>LCD_ShowChar</STRONG> (Thumb, 276 bytes, Stack size 64 bytes, mid_tftlcd.o(i.LCD_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_ShowChar &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>

<P><STRONG><a name="[30]"></a>LCD_ShowString</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, mid_tftlcd.o(i.LCD_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_DrawPoint &rArr; LCD_WriteRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_UI1
</UL>

<P><STRONG><a name="[3d]"></a>LCD_WriteRAM</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, mid_tftlcd.o(i.LCD_WriteRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>

<P><STRONG><a name="[3a]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mid_tftlcd.o(i.LCD_WriteRAM_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_WriteRAM_Prepare
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ft32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_gpio_output
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_gpio_input
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ft32f0xx_misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft_systick_init
</UL>

<P><STRONG><a name="[8]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft32f0xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_ft32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>TIM3_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ft_timer.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ft32f0xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>TIM_GetITStatus</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, ft32f0xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[5f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[60]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[43]"></a>conf_gpio_input</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, ft_gpio.o(i.conf_gpio_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = conf_gpio_input &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[46]"></a>conf_gpio_output</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ft_gpio.o(i.conf_gpio_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = conf_gpio_output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[2e]"></a>delay_ms</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mid_delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Dynamic
</UL>

<P><STRONG><a name="[47]"></a>ft_delay_ms</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, ft_systick.o(i.ft_delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[48]"></a>ft_systick_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ft_systick.o(i.ft_systick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ft_systick_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mid_system_tick_init
</UL>

<P><STRONG><a name="[4b]"></a>gpio_config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, mid_gpio.o(i.gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gpio_config &rArr; conf_gpio_input &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_gpio_output
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_gpio_input
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[4c]"></a>gpio_output_set</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, mid_gpio.o(i.gpio_output_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_output_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gpio_value
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_data
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_cmd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_burst_data
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[24]"></a>main</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = main &rArr; Display_Dynamic &rArr; LCD_FillRectanglePercent &rArr; LCD_Fill &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_lcd_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mid_system_tick_init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_UI1
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Dynamic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4e]"></a>mid_system_tick_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mid_systick.o(i.mid_system_tick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mid_system_tick_init &rArr; ft_systick_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft_systick_init
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>set_gpio_value</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ft_gpio.o(i.set_gpio_value))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_set
</UL>

<P><STRONG><a name="[50]"></a>st7789_init</STRONG> (Thumb, 724 bytes, Stack size 16 bytes, st7789.o(i.st7789_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = st7789_init &rArr; LCD_Clear &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_data
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_cmd
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Param_Setting
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_lcd_init
</UL>

<P><STRONG><a name="[52]"></a>st7789_send_byte</STRONG> (Thumb, 164 bytes, Stack size 12 bytes, st7789.o(i.st7789_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = st7789_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_data
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_cmd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_burst_data
</UL>

<P><STRONG><a name="[2]"></a>st7789_write_burst_data</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, st7789.o(i.st7789_write_burst_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = st7789_write_burst_data &rArr; gpio_output_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_set
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_send_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tft_lcd_handler.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>st7789_write_cmd</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, st7789.o(i.st7789_write_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = st7789_write_cmd &rArr; gpio_output_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_set
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tft_lcd_handler.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>st7789_write_data</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, st7789.o(i.st7789_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = st7789_write_data &rArr; gpio_output_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_set
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tft_lcd_handler.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>tft_lcd_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tft_lcd_handler.o(i.tft_lcd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = tft_lcd_init &rArr; st7789_init &rArr; LCD_Clear &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[40]"></a>SetSysClock</STRONG> (Thumb, 200 bytes, Stack size 12 bytes, system_ft32f0xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4a]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, ft_systick.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft_systick_init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
